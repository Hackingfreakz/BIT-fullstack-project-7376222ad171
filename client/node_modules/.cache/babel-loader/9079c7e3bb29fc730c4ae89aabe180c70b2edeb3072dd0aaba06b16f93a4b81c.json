{"ast":null,"code":"var _jsxFileName = \"D:\\\\RP\\\\client\\\\src\\\\components\\\\GAuth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleLogin, GoogleOAuthProvider, googleLogout, useGoogleLogin } from \"@react-oauth/google\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GAuth = () => {\n  _s();\n  const [profile, setProfile] = useState([]);\n  const login = useGoogleLogin({\n    onSuccess: codeResponse => setUser(codeResponse),\n    onError: error => console.log('Login Failed:', error)\n  });\n  useEffect(() => {\n    if (user) {\n      axios.get(`https://www.googleapis.com/oauth2/v1/userinfo?access_token=${user.access_token}`, {\n        headers: {\n          Authorization: `Bearer ${user.access_token}`,\n          Accept: 'application/json'\n        }\n      }).then(res => {\n        setProfile(res.data);\n      }).catch(err => console.log(err));\n    }\n  }, [user]);\n  const clientId = \"691701543397-gbptsop3a1t7b0j2b25djg67nae1rkik.apps.googleusercontent.com\";\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => login(),\n    children: \"Sign in with Google \\uD83D\\uDE80 \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this)\n  // <GoogleOAuthProvider \n  // style={{backgroundColor: '#f2f5f9'}}\n  //     clientId={clientId}>\n  //     <GoogleLogin\n  //         onSuccess={credentialResponse => {\n  //             console.log(credentialResponse);\n  //         }}\n  //         onError={() => {\n  //             console.log(\"Login Failed\");\n  //         }}\n  //     />\n  // </GoogleOAuthProvider>\n  ;\n};\n_s(GAuth, \"/b/qnN84VoztDyAsh2bWTy3abGk=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = GAuth;\nexport default GAuth;\nvar _c;\n$RefreshReg$(_c, \"GAuth\");","map":{"version":3,"names":["React","useState","useEffect","GoogleLogin","GoogleOAuthProvider","googleLogout","useGoogleLogin","axios","jsxDEV","_jsxDEV","GAuth","_s","profile","setProfile","login","onSuccess","codeResponse","setUser","onError","error","console","log","user","get","access_token","headers","Authorization","Accept","then","res","data","catch","err","clientId","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/RP/client/src/components/GAuth.js"],"sourcesContent":["import React ,{ useState, useEffect }from 'react'\r\nimport { GoogleLogin, GoogleOAuthProvider,googleLogout, useGoogleLogin } from \"@react-oauth/google\";\r\nimport axios from 'axios';\r\n\r\nconst GAuth = () => {\r\n    const [ profile, setProfile ] = useState([]);\r\n    const login = useGoogleLogin({\r\n        onSuccess: (codeResponse) => setUser(codeResponse),\r\n        onError: (error) => console.log('Login Failed:', error)\r\n    });\r\n    useEffect(\r\n        () => {\r\n            if (user) {\r\n                axios\r\n                    .get(`https://www.googleapis.com/oauth2/v1/userinfo?access_token=${user.access_token}`, {\r\n                        headers: {\r\n                            Authorization: `Bearer ${user.access_token}`,\r\n                            Accept: 'application/json'\r\n                        }\r\n                    })\r\n                    .then((res) => {\r\n                        setProfile(res.data);\r\n                    })\r\n                    .catch((err) => console.log(err));\r\n            }\r\n        },\r\n        [ user ]\r\n    );\r\n    const clientId = \"691701543397-gbptsop3a1t7b0j2b25djg67nae1rkik.apps.googleusercontent.com\";\r\n\r\n    return (\r\n        <button onClick={() => login()}>Sign in with Google ðŸš€ </button>\r\n        // <GoogleOAuthProvider \r\n        // style={{backgroundColor: '#f2f5f9'}}\r\n        //     clientId={clientId}>\r\n        //     <GoogleLogin\r\n        //         onSuccess={credentialResponse => {\r\n        //             console.log(credentialResponse);\r\n        //         }}\r\n        //         onError={() => {\r\n        //             console.log(\"Login Failed\");\r\n        //         }}\r\n        //     />\r\n        // </GoogleOAuthProvider>\r\n    );\r\n};\r\nexport default GAuth;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACjD,SAASC,WAAW,EAAEC,mBAAmB,EAACC,YAAY,EAAEC,cAAc,QAAQ,qBAAqB;AACnG,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAAEC,OAAO,EAAEC,UAAU,CAAE,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMa,KAAK,GAAGR,cAAc,CAAC;IACzBS,SAAS,EAAGC,YAAY,IAAKC,OAAO,CAACD,YAAY,CAAC;IAClDE,OAAO,EAAGC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,KAAK;EAC1D,CAAC,CAAC;EACFjB,SAAS,CACL,MAAM;IACF,IAAIoB,IAAI,EAAE;MACNf,KAAK,CACAgB,GAAG,CAAC,8DAA8DD,IAAI,CAACE,YAAY,EAAE,EAAE;QACpFC,OAAO,EAAE;UACLC,aAAa,EAAE,UAAUJ,IAAI,CAACE,YAAY,EAAE;UAC5CG,MAAM,EAAE;QACZ;MACJ,CAAC,CAAC,CACDC,IAAI,CAAEC,GAAG,IAAK;QACXhB,UAAU,CAACgB,GAAG,CAACC,IAAI,CAAC;MACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKZ,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC,CAAC;IACzC;EACJ,CAAC,EACD,CAAEV,IAAI,CACV,CAAC;EACD,MAAMW,QAAQ,GAAG,0EAA0E;EAE3F,oBACIxB,OAAA;IAAQyB,OAAO,EAAEA,CAAA,KAAMpB,KAAK,CAAC,CAAE;IAAAqB,QAAA,EAAC;EAAuB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ;EAC/D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAER,CAAC;AAAC5B,EAAA,CAzCID,KAAK;EAAA,QAEOJ,cAAc;AAAA;AAAAkC,EAAA,GAF1B9B,KAAK;AA0CX,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}